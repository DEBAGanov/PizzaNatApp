/**
 * @file: GetUserDefaultDataUseCase.kt
 * @description: UseCase –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –∑–∞–∫–∞–∑–∞
 * @dependencies: AuthRepository, OrderRepository
 * @created: 2024-12-25
 */
package com.pizzanat.app.domain.usecases.user

import android.util.Log
import com.pizzanat.app.domain.repositories.AuthRepository
import com.pizzanat.app.domain.repositories.OrderRepository
import javax.inject.Inject

/**
 * –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
 */
data class UserDefaultData(
    val customerName: String = "",
    val customerPhone: String = "+7",
    val deliveryAddress: String = ""
)

/**
 * UseCase –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞
 */
class GetUserDefaultDataUseCase @Inject constructor(
    private val authRepository: AuthRepository,
    private val orderRepository: OrderRepository,
    private val saveUserPreferencesUseCase: SaveUserPreferencesUseCase
) {
    
    suspend operator fun invoke(): Result<UserDefaultData> {
        return try {
            Log.d("GetUserDefaultDataUseCase", "üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...")
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            val currentUser = authRepository.getCurrentUser()
            Log.d("GetUserDefaultDataUseCase", "üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${currentUser?.username}")
            
            var customerName = ""
            var customerPhone = "+7"
            var deliveryAddress = ""
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É: –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è > –ü—Ä–æ—Ñ–∏–ª—å > –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤
            
            // 1. –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ) - –≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            Log.d("GetUserDefaultDataUseCase", "üìã –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è...")
            val savedAddress = saveUserPreferencesUseCase.getLastDeliveryAddress()
            val savedPhone = saveUserPreferencesUseCase.getLastCustomerPhone() 
            val savedName = saveUserPreferencesUseCase.getLastCustomerName()
            
            Log.d("GetUserDefaultDataUseCase", "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:")
            Log.d("GetUserDefaultDataUseCase", "  –ê–¥—Ä–µ—Å: '$savedAddress'")
            Log.d("GetUserDefaultDataUseCase", "  –¢–µ–ª–µ—Ñ–æ–Ω: '$savedPhone'")
            Log.d("GetUserDefaultDataUseCase", "  –ò–º—è: '$savedName'")
            
            // 2. –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö)
            if (currentUser != null) {
                // –ò–º—è: –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è > –ø—Ä–æ—Ñ–∏–ª—å
                if (savedName.isNotBlank()) {
                    customerName = savedName
                    Log.d("GetUserDefaultDataUseCase", "üìù –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∏–º—è: '$customerName'")
                } else {
                    customerName = "${currentUser.firstName} ${currentUser.lastName}".trim()
                    Log.d("GetUserDefaultDataUseCase", "üìù –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è: '$customerName'")
                }
                
                // –¢–µ–ª–µ—Ñ–æ–Ω: –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è > –ø—Ä–æ—Ñ–∏–ª—å
                if (savedPhone.isNotBlank() && savedPhone != "+7") {
                    customerPhone = savedPhone
                    Log.d("GetUserDefaultDataUseCase", "üì± –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: '$customerPhone'")
                } else if (currentUser.phone.isNotBlank() && currentUser.phone != "+7") {
                    customerPhone = currentUser.phone
                    Log.d("GetUserDefaultDataUseCase", "üì± –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è: '$customerPhone'")
                }
                
                // –ê–¥—Ä–µ—Å: –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è > –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤
                if (savedAddress.isNotBlank()) {
                    deliveryAddress = savedAddress
                    Log.d("GetUserDefaultDataUseCase", "üè† –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å: '$deliveryAddress'")
                } else {
                    // 3. Fallback: –ø–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞
                    Log.d("GetUserDefaultDataUseCase", "üîç –ò—â–µ–º –∞–¥—Ä–µ—Å –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤...")
                    try {
                        val ordersResult = orderRepository.getUserOrders(currentUser.id)
                        if (ordersResult.isSuccess) {
                            val orders = ordersResult.getOrNull() ?: emptyList()
                            Log.d("GetUserDefaultDataUseCase", "üì¶ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ${orders.size}")
                            
                            // –ë–µ—Ä–µ–º –∞–¥—Ä–µ—Å –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞
                            val lastOrder = orders.firstOrNull()
                            if (lastOrder != null && lastOrder.deliveryAddress.isNotBlank()) {
                                deliveryAddress = lastOrder.deliveryAddress
                                Log.d("GetUserDefaultDataUseCase", "üè† –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥—Ä–µ—Å –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞ #${lastOrder.id}: '$deliveryAddress'")
                            } else {
                                Log.d("GetUserDefaultDataUseCase", "‚ö†Ô∏è –ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤ —Å –∞–¥—Ä–µ—Å–æ–º")
                            }
                        } else {
                            Log.w("GetUserDefaultDataUseCase", "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤: ${ordersResult.exceptionOrNull()?.message}")
                        }
                    } catch (e: Exception) {
                        Log.w("GetUserDefaultDataUseCase", "‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–∫–∞–∑–æ–≤: ${e.message}")
                        // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∞–¥—Ä–µ—Å–∞
                    }
                }
            } else {
                Log.w("GetUserDefaultDataUseCase", "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
                customerName = savedName
                customerPhone = if (savedPhone != "+7") savedPhone else "+7"
                deliveryAddress = savedAddress
            }
            
            val result = UserDefaultData(
                customerName = customerName,
                customerPhone = customerPhone,
                deliveryAddress = deliveryAddress
            )
            
            Log.d("GetUserDefaultDataUseCase", "‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã:")
            Log.d("GetUserDefaultDataUseCase", "  –ò–º—è: '$customerName'")
            Log.d("GetUserDefaultDataUseCase", "  –¢–µ–ª–µ—Ñ–æ–Ω: '$customerPhone'")
            Log.d("GetUserDefaultDataUseCase", "  –ê–¥—Ä–µ—Å: '$deliveryAddress'")
            
            Result.success(result)
            
        } catch (e: Exception) {
            Log.e("GetUserDefaultDataUseCase", "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: ${e.message}")
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
            Result.success(UserDefaultData())
        }
    }
} 