/**
 * @file: E2ETestingReadinessPanel.kt
 * @description: UI –ø–∞–Ω–µ–ª—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ E2E —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 * @dependencies: Compose UI, BuildConfig
 * @created: 2024-12-20
 */
package com.pizzanat.app.presentation.debug

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import com.pizzanat.app.BuildConfig
import com.pizzanat.app.utils.BuildConfigUtils

@Composable
fun E2ETestingReadinessPanel() {
    Column(
        modifier = Modifier
            .fillMaxSize()
            .verticalScroll(rememberScrollState())
            .padding(16.dp),
        verticalArrangement = Arrangement.spacedBy(16.dp)
    ) {
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(containerColor = MaterialTheme.colorScheme.primaryContainer)
        ) {
            Box(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(16.dp),
                contentAlignment = Alignment.Center
            ) {
                Text(
                    text = "üß™ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ E2E —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é",
                    style = MaterialTheme.typography.headlineSmall,
                    color = MaterialTheme.colorScheme.onPrimaryContainer,
                    textAlign = TextAlign.Center
                )
            }
        }
        
        // –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(containerColor = Color(0xFF4CAF50).copy(alpha = 0.1f))
        ) {
            Column(
                modifier = Modifier.padding(16.dp)
            ) {
                Text(
                    text = "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!",
                    style = MaterialTheme.typography.titleLarge,
                    fontWeight = FontWeight.Bold,
                    color = Color(0xFF4CAF50)
                )
                
                Spacer(modifier = Modifier.height(8.dp))
                
                Text(
                    text = "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ E2E —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.",
                    style = MaterialTheme.typography.bodyMedium,
                    color = MaterialTheme.colorScheme.onSurfaceVariant
                )
            }
        }
        
        // –î–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        Text(
            text = "–î–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:",
            style = MaterialTheme.typography.titleMedium,
            fontWeight = FontWeight.Bold
        )
        
        // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        CheckCard(
            title = "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
            details = listOf(
                "Environment: ${BuildConfigUtils.getEnvironmentDisplayName()}",
                "Debug —Ä–µ–∂–∏–º: ${if (BuildConfig.DEBUG) "–ê–∫—Ç–∏–≤–µ–Ω" else "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"}",
                "Version: ${BuildConfig.VERSION_NAME} (${BuildConfig.VERSION_CODE})"
            )
        )
        
        // Backend
        CheckCard(
            title = "Backend API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
            details = listOf(
                "URL: ${BuildConfigUtils.getBaseUrl()}",
                "User-Agent: ${BuildConfigUtils.getUserAgent()}",
                "Mock –¥–∞–Ω–Ω—ã–µ: ${if (BuildConfig.USE_MOCK_DATA) "–í–∫–ª—é—á–µ–Ω—ã" else "–û—Ç–∫–ª—é—á–µ–Ω—ã"}"
            )
        )
        
        // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        CheckCard(
            title = "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã E2E —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            details = listOf(
                "TelegramE2ETester: –ì–æ—Ç–æ–≤",
                "AutoE2ETestPanel: –ì–æ—Ç–æ–≤",
                "ApiLogger: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω",
                "E2ETestScenario: 5 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤"
            )
        )
        
        // –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã
        CheckCard(
            title = "Telegram API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã",
            details = listOf(
                "POST /auth/telegram/init - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
                "GET /auth/telegram/status/{token} - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞",
                "Polling: –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥, –º–∞–∫—Å–∏–º—É–º 60 —Å–µ–∫—É–Ω–¥"
            )
        )
        
        // –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(containerColor = Color(0xFFE3F2FD))
        ) {
            Column(
                modifier = Modifier.padding(16.dp)
            ) {
                Text(
                    text = "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏",
                    style = MaterialTheme.typography.titleMedium,
                    fontWeight = FontWeight.Bold,
                    color = Color(0xFF1976D2)
                )
                
                Spacer(modifier = Modifier.height(8.dp))
                
                Text(
                    text = "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É 'Telegram E2E' –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n" +
                            "2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'Auto Test' –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫\n" +
                            "3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Telegram —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ\n" +
                            "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
                    style = MaterialTheme.typography.bodyMedium
                )
            }
        }
        
        // –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
        Card(
            modifier = Modifier.fillMaxWidth(),
            colors = CardDefaults.cardColors(containerColor = Color(0xFFFFF3E0))
        ) {
            Column(
                modifier = Modifier.padding(16.dp)
            ) {
                Text(
                    text = "‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã",
                    style = MaterialTheme.typography.titleMedium,
                    fontWeight = FontWeight.Bold,
                    color = Color(0xFFE65100)
                )
                
                Spacer(modifier = Modifier.height(8.dp))
                
                Text(
                    text = "‚Ä¢ Network Error: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n" +
                            "‚Ä¢ HTTP 404/500: backend –Ω–µ –∏–º–µ–µ—Ç Telegram —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤\n" +
                            "‚Ä¢ Timeout: –º–µ–¥–ª–µ–Ω–Ω–∞—è —Å–µ—Ç—å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º\n" +
                            "‚Ä¢ Bot –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: Telegram Bot –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω",
                    style = MaterialTheme.typography.bodyMedium
                )
            }
        }
    }
}

@Composable
private fun CheckCard(
    title: String,
    details: List<String>
) {
    Card(
        modifier = Modifier.fillMaxWidth(),
        colors = CardDefaults.cardColors(containerColor = Color(0xFF4CAF50).copy(alpha = 0.1f))
    ) {
        Column(
            modifier = Modifier.padding(12.dp)
        ) {
            Row(
                verticalAlignment = Alignment.CenterVertically
            ) {
                Text(
                    text = "‚úÖ",
                    style = MaterialTheme.typography.titleMedium
                )
                
                Spacer(modifier = Modifier.width(8.dp))
                
                Text(
                    text = title,
                    style = MaterialTheme.typography.titleSmall,
                    fontWeight = FontWeight.Bold,
                    color = Color(0xFF4CAF50)
                )
            }
            
            Spacer(modifier = Modifier.height(8.dp))
            
            details.forEach { detail ->
                Text(
                    text = "‚Ä¢ $detail",
                    style = MaterialTheme.typography.bodySmall,
                    color = MaterialTheme.colorScheme.onSurfaceVariant,
                    modifier = Modifier.padding(start = 8.dp, bottom = 2.dp)
                )
            }
        }
    }
} 